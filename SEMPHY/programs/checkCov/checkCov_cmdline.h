// 	$Id: checkCov_cmdline.h 2399 2014-03-13 22:43:51Z wkliao $	
/* checkCov_cmdline.h */

/* File autogenerated by gengetopt version 2.16  */

#ifndef CHECKCOV_CMDLINE_H
#define CHECKCOV_CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "CheckCov"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "3.00"
#endif

struct gengetopt_args_info
{
  char * sequence_arg;	/* Sequence file name (default='-').  */
  char * sequence_orig;	/* Sequence file name original value given at command line.  */
  char * tree_arg;	/* Tree file name.  */
  char * tree_orig;	/* Tree file name original value given at command line.  */
  char * outputfile_arg;	/* Output file (default='-').  */
  char * outputfile_orig;	/* Output file original value given at command line.  */
  int branch_arg;	/* number of branch for covarion analysis (default='-1').  */
  char * branch_orig;	/* number of branch for covarion analysis original value given at command line.  */
  char * modelfile_arg;	/* Use user input file as model.  */
  char * modelfile_orig;	/* Use user input file as model original value given at command line.  */
  int startPos_arg;	/* start checkin from this pos (default='-1').  */
  char * startPos_orig;	/* start checkin from this pos original value given at command line.  */
  int endPos_arg;	/* stop checkin from this pos (default='-1').  */
  char * endPos_orig;	/* stop checkin from this pos original value given at command line.  */
  int verbose_arg;	/* Log report level (verbose) (default='1').  */
  char * verbose_orig;	/* Log report level (verbose) original value given at command line.  */
  char * Logfile_arg;	/* Log output file name (default='-').  */
  char * Logfile_orig;	/* Log output file name original value given at command line.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int sequence_given ;	/* Whether sequence was given.  */
  int tree_given ;	/* Whether tree was given.  */
  int outputfile_given ;	/* Whether outputfile was given.  */
  int branch_given ;	/* Whether branch was given.  */
  int day_given ;	/* Whether day was given.  */
  int jtt_given ;	/* Whether jtt was given.  */
  int rev_given ;	/* Whether rev was given.  */
  int wag_given ;	/* Whether wag was given.  */
  int cprev_given ;	/* Whether cprev was given.  */
  int aaJC_given ;	/* Whether aaJC was given.  */
  int modelfile_given ;	/* Whether modelfile was given.  */
  int startPos_given ;	/* Whether startPos was given.  */
  int endPos_given ;	/* Whether endPos was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int Logfile_given ;	/* Whether Logfile was given.  */

  int Model_group_counter; /* counter for group Model */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename, struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CHECKCOV_CMDLINE_H */
