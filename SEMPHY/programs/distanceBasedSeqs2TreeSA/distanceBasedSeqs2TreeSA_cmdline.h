// 	$Id: distanceBasedSeqs2TreeSA_cmdline.h 2399 2014-03-13 22:43:51Z wkliao $	
/* distanceBasedSeqs2TreeSA_cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef DISTANCEBASEDSEQS2TREESA_CMDLINE_H
#define DISTANCEBASEDSEQS2TREESA_CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Distance-based phylogeny reconstrustion"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "0.9"
#endif

struct gengetopt_args_info
{
  int bootstrap_arg;	/* Do a given number of bootstrap iterations. To bootstrap a known tree give it in the -tree parameter.  */
  int dontOptimizeBranchLengths_flag;	/* Don't optimize branch lengths (default=off).  */
  float epsilonLikelihoodImprovement_arg;	/* The threshold for optimization of likelihood of the tree (default='0.01').  */
  float epsilonLikelihoodImprovement4alphaOptimiz_arg;	/* The threshold for optimization of likelihood of the tree (default='0.01').  */
  float epsilonLikelihoodImprovement4BBL_arg;	/* The threshold for optimization of likelihood of the tree (default='0.01').  */
  char * sequence_arg;	/* Sequence file name (default='-').  */
  char * tree_arg;	/* Tree file name.  */
  char * constraint_arg;	/* Constraint Tree file name.  */
  char * outputfile_arg;	/* Output file (default='-').  */
  char * treeoutputfile_arg;	/* Tree output file (default='-').  */
  int gaps_flag;	/* Remove positions with gaps (default=off).  */
  long seed_arg;	/* Seed random number generator.  */
  int alphabet_arg;	/* Alphabet Size (default='20').  */
  float ratio_arg;	/* Transition/Transversion ratio (default='2.0').  */
  char * ACGprob_arg;	/* User input nucleotide frequencies. String separated list for A,C,G (default='0.25,0.25,0.25').  */
  float inputRate_arg;	/* Set External globalRate (default='1.0').  */
  int homogeneous_flag;	/* Don't use Gamma ASRV (default=off).  */
  float alpha_arg;	/* Set alpha for Gamma ASRV.  */
  int optimizeAlpha_flag;	/* Optimize alpha for Gamma ASRV (default=off).  */
  int categories_arg;	/* Number of categories to use with descrete Gamma ASRV (default='8').  */
  int laguerre_flag;	/* Use Laguerre approximation of Gamma - CURRENTLY NOT IMPLIMENTED (default=off).  */
  char * modelfile_arg;	/* Use user input file as model.  */
  int verbose_arg;	/* Log report level (verbose) (default='1').  */
  char * Logfile_arg;	/* Log output file name (default='-').  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int pD_given ;	/* Whether pD was given.  */
  int jc_given ;	/* Whether jc was given.  */
  int homogeneousRates_given ;	/* Whether homogeneousRates was given.  */
  int pairwiseGamma_given ;	/* Whether pairwiseGamma was given.  */
  int commonAlpha_given ;	/* Whether commonAlpha was given.  */
  int rate4site_given ;	/* Whether rate4site was given.  */
  int posterior_given ;	/* Whether posterior was given.  */
  int bootstrap_given ;	/* Whether bootstrap was given.  */
  int dontOptimizeBranchLengths_given ;	/* Whether dontOptimizeBranchLengths was given.  */
  int epsilonLikelihoodImprovement_given ;	/* Whether epsilonLikelihoodImprovement was given.  */
  int epsilonLikelihoodImprovement4alphaOptimiz_given ;	/* Whether epsilonLikelihoodImprovement4alphaOptimiz was given.  */
  int epsilonLikelihoodImprovement4BBL_given ;	/* Whether epsilonLikelihoodImprovement4BBL was given.  */
  int sequence_given ;	/* Whether sequence was given.  */
  int tree_given ;	/* Whether tree was given.  */
  int constraint_given ;	/* Whether constraint was given.  */
  int outputfile_given ;	/* Whether outputfile was given.  */
  int treeoutputfile_given ;	/* Whether treeoutputfile was given.  */
  int gaps_given ;	/* Whether gaps was given.  */
  int seed_given ;	/* Whether seed was given.  */
  int alphabet_given ;	/* Whether alphabet was given.  */
  int ratio_given ;	/* Whether ratio was given.  */
  int ACGprob_given ;	/* Whether ACGprob was given.  */
  int inputRate_given ;	/* Whether inputRate was given.  */
  int homogeneous_given ;	/* Whether homogeneous was given.  */
  int alpha_given ;	/* Whether alpha was given.  */
  int optimizeAlpha_given ;	/* Whether optimizeAlpha was given.  */
  int categories_given ;	/* Whether categories was given.  */
  int laguerre_given ;	/* Whether laguerre was given.  */
  int day_given ;	/* Whether day was given.  */
  int jtt_given ;	/* Whether jtt was given.  */
  int rev_given ;	/* Whether rev was given.  */
  int wag_given ;	/* Whether wag was given.  */
  int cprev_given ;	/* Whether cprev was given.  */
  int nucjc_given ;	/* Whether nucjc was given.  */
  int aaJC_given ;	/* Whether aaJC was given.  */
  int k2p_given ;	/* Whether k2p was given.  */
  int hky_given ;	/* Whether hky was given.  */
  int modelfile_given ;	/* Whether modelfile was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int Logfile_given ;	/* Whether Logfile was given.  */

  int Methods_group_counter; /* counter for group Methods */
  int Model_group_counter; /* counter for group Model */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* DISTANCEBASEDSEQS2TREESA_CMDLINE_H */
