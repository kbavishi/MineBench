// 	$Id: simulateSequnce_cmdline.h 2399 2014-03-13 22:43:51Z wkliao $	
/* simulateSequnce_cmdline.h */

/* File autogenerated by gengetopt version 2.11  */

#ifndef SIMULATESEQUNCE_CMDLINE_H
#define SIMULATESEQUNCE_CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "simulatSequnce"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.1"
#endif

struct gengetopt_args_info
{
  char * tree_arg;	/* Tree file name.  */
  int length_arg;	/* Required sequence length.  */
  long seed_arg;	/* Seed random number generator.  */
  char * outputfile_arg;	/* Output sequence file (default='-').  */
  char * format_arg;	/* Sequence format: [phylip], clustal, molphy, mase, fasta (default='phylip').  */
  int alphabet_arg;	/* Alphabet Size (default='20').  */
  float ratio_arg;	/* Transition/Transversion ratio (default='2.0').  */
  char * ACGprob_arg;	/* User input nucleotide frequencies. String separated list for A,C,G (default='0.25,0.25,0.25').  */
  float gamma_arg;	/* Use Gamma RVAS (4 bins) and set alpha (default='0.3').  */
  float inputRate_arg;	/* Set External globalRate (default='1.0').  */
  char * rateVector_arg;	/* filename for rate pre position.  */
  char * modelfile_arg;	/* Use user input file as model.  */
  int verbose_arg;	/* Log report level (verbose) (default='1').  */
  char * Logfile_arg;	/* Log output file name (default='-').  */

  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int tree_given ;	/* Whether tree was given.  */
  int length_given ;	/* Whether length was given.  */
  int seed_given ;	/* Whether seed was given.  */
  int outputfile_given ;	/* Whether outputfile was given.  */
  int format_given ;	/* Whether format was given.  */
  int alphabet_given ;	/* Whether alphabet was given.  */
  int ratio_given ;	/* Whether ratio was given.  */
  int ACGprob_given ;	/* Whether ACGprob was given.  */
  int gamma_given ;	/* Whether gamma was given.  */
  int inputRate_given ;	/* Whether inputRate was given.  */
  int rateVector_given ;	/* Whether rateVector was given.  */
  int day_given ;	/* Whether day was given.  */
  int jtt_given ;	/* Whether jtt was given.  */
  int rev_given ;	/* Whether rev was given.  */
  int wag_given ;	/* Whether wag was given.  */
  int cprev_given ;	/* Whether cprev was given.  */
  int nucjc_given ;	/* Whether nucjc was given.  */
  int aaJC_given ;	/* Whether aaJC was given.  */
  int k2p_given ;	/* Whether k2p was given.  */
  int hky_given ;	/* Whether hky was given.  */
  int modelfile_given ;	/* Whether modelfile was given.  */
  int verbose_given ;	/* Whether verbose was given.  */
  int Logfile_given ;	/* Whether Logfile was given.  */

} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* SIMULATESEQUNCE_CMDLINE_H */
